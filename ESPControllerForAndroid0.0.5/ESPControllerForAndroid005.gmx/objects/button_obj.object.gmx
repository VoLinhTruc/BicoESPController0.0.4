<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>button_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0
movable = 0
image_index = 0
color_index = round(random(11));
image_blend = make_color_rgb(global.color[color_index, 0], global.color[color_index, 1], global.color[color_index, 2])

name = get_string("Name: ", "Button")
pin = get_integer("Pin", 16);   

feedback_value = 0
host = get_string("Host: ", "192.168.1.")
received_host = ""
sending_json = ""
received_json = ""
enable_to_send = 1
http_id = 0
value = 0


top_left_percent = 0.3;
distance_index0_and_index1 = 16;
top_left_x = x - sprite_get_xoffset(sprite_index) + distance_index0_and_index1;
top_left_y = y - sprite_get_yoffset(sprite_index) + distance_index0_and_index1;
bottom_right_percent_x = top_left_x + sprite_width*top_left_percent;
bottom_right_percent_y = top_left_y + sprite_height*top_left_percent;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movable = 1
enable_to_send = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(movable){
    x=mouse_x;
    y=mouse_y;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>117</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_snap</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>32</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>32</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="recycleBin_obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mouse_check_button_released(mb_left))
{
    instance_destroy()
    effect_create_below(ef_smoke, x, y, 2, image_blend);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movable = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!mouseAtTopLeft(top_left_percent))
{
    http_header_map = ds_map_create()
    ds_map_add(http_header_map, "User-Agent", "BiCoESPController")
    
    value = 0
    sending_json = "{"+chr(34)+"digital_pin"+chr(34)+":"+string(pin)+","+chr(34)+"digital_value"+chr(34)+":"+string(value)+"}"
    
    if(enable_to_send)
    {   
        http_id = http_request("http://"+host, "POST", http_header_map, sending_json);
    }
    ds_map_destroy(http_header_map);
    
    enable_to_send = 1
}
/*
//value = !value

//button_map[? "digital_value"] = value

//sending_json = json_encode(button_map)

show_message(value)
show_message(pin)
show_message(feedback_value)
show_message(button_map[? "digital_pin"])
show_message(button_map[? "digital_value"])

//http_request("http://"+host, "POST", http_header_map, sending_json)
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!mouseAtTopLeft(top_left_percent))
{    
    http_header_map = ds_map_create()
    ds_map_add(http_header_map, "User-Agent", "BiCoESPController")
    
    value = 1    
    sending_json = "{"+chr(34)+"digital_pin"+chr(34)+":"+string(pin)+","+chr(34)+"digital_value"+chr(34)+":"+string(value)+"}"
    
    if(enable_to_send)
    {   
        http_id = http_request("http://"+host, "POST", http_header_map, sending_json);
    }
    ds_map_destroy(http_header_map);
    
    enable_to_send = 1
}
/*
//value = !value

//button_map[? "digital_value"] = value

//sending_json = json_encode(button_map)

show_message(value)
show_message(pin)
show_message(feedback_value)
show_message(button_map[? "digital_pin"])
show_message(button_map[? "digital_value"])

//http_request("http://"+host, "POST", http_header_map, sending_json)
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mouseAtTopLeft(top_left_percent))
{
    alarm[0] = room_speed/2;
}
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>after_decode_json_map = ds_map_create()
received_host = async_load[? "url"]
received_json = async_load[? "result"] //actually async_load[? "result"] is content cover json 
received_id = async_load[? "id"]

if(received_id == http_id)
{
    if(received_json != undefined)
    {
        if(received_json != ""){
            if((string_pos("digital_pin", string(received_json)) &gt; 0) &amp;&amp; (string_pos("digital_value", string(received_json)) &gt; 0))
            {
                after_decode_json_map = json_decode(received_json)          
                if( ds_map_exists(after_decode_json_map, "digital_pin") &amp;&amp; ds_map_exists(after_decode_json_map, "digital_value"))   
                {
                    if ((pin == after_decode_json_map[? "digital_pin"]) &amp;&amp; (received_host == ("http://"+host)))
                    {
                        feedback_value = after_decode_json_map[? "digital_value"];
                        image_index = feedback_value;
                    }
                }
            }
            else
            {
                http_header_map = ds_map_create()
                ds_map_add(http_header_map, "User-Agent", "BiCoESPController")
                sending_json = "{"+chr(34)+"digital_pin"+chr(34)+":"+string(pin)+","+chr(34)+"digital_value"+chr(34)+":"+string(value)+"}"
                if(enable_to_send)
                {   
                    http_id = http_request("http://"+host, "POST", http_header_map, sending_json);
                }
                ds_map_destroy(http_header_map);
            }
        }
    }
}

ds_map_destroy(after_decode_json_map)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

draw_set_font(pin_num_font)
draw_set_alpha(0.7)
draw_set_colour(~image_blend)
draw_set_halign(fa_center)
draw_set_valign(fa_middle)

draw_text(x, y, string(pin));

draw_set_alpha(0.85)
draw_set_font(host_font)
draw_text(x, y+45, host)

draw_set_alpha(0.85)
draw_set_font(name_font)
draw_text(x, y-40, name)

draw_set_alpha(1)

top_left_x = x - sprite_get_xoffset(sprite_index) + distance_index0_and_index1;
top_left_y = y - sprite_get_yoffset(sprite_index) + distance_index0_and_index1;
bottom_right_percent_x = top_left_x + sprite_width*top_left_percent;
bottom_right_percent_y = top_left_y + sprite_height*top_left_percent;
draw_rectangle(top_left_x, top_left_y, bottom_right_percent_x, bottom_right_percent_y, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
